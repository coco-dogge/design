|lcd_demo3
btn[0] => rst.IN1
btn[1] => ~NO_FANOUT~
btn[2] => ~NO_FANOUT~
btn[3] => ~NO_FANOUT~
clk => clk.IN1
sw[0] => Decoder1.IN1
sw[1] => Decoder1.IN0
sw[2] => ~NO_FANOUT~
sw[3] => Decoder2.IN0
sw[3] => Decoder3.IN0
lcd_on <= <VCC>
lcd_data[0] <= lcd_controller:u0.lcd_data
lcd_data[1] <= lcd_controller:u0.lcd_data
lcd_data[2] <= lcd_controller:u0.lcd_data
lcd_data[3] <= lcd_controller:u0.lcd_data
lcd_data[4] <= lcd_controller:u0.lcd_data
lcd_data[5] <= lcd_controller:u0.lcd_data
lcd_data[6] <= lcd_controller:u0.lcd_data
lcd_data[7] <= lcd_controller:u0.lcd_data
lcd_rs <= lcd_controller:u0.lcd_rs
lcd_rw <= lcd_controller:u0.lcd_rw
lcd_en <= lcd_controller:u0.lcd_en


|lcd_demo3|lcd_controller:u0
idata[0] => lcd_data[0].DATAIN
idata[1] => lcd_data[1].DATAIN
idata[2] => lcd_data[2].DATAIN
idata[3] => lcd_data[3].DATAIN
idata[4] => lcd_data[4].DATAIN
idata[5] => lcd_data[5].DATAIN
idata[6] => lcd_data[6].DATAIN
idata[7] => lcd_data[7].DATAIN
irs => lcd_rs.DATAIN
istart => prestart.DATAIN
istart => Equal0.IN0
odone <= odone~reg0.DB_MAX_OUTPUT_PORT_TYPE
iclk => cont[0].CLK
iclk => cont[1].CLK
iclk => cont[2].CLK
iclk => cont[3].CLK
iclk => cont[4].CLK
iclk => mstart.CLK
iclk => prestart.CLK
iclk => lcd_en~reg0.CLK
iclk => odone~reg0.CLK
iclk => state~5.DATAIN
irst_n => cont[0].ACLR
irst_n => cont[1].ACLR
irst_n => cont[2].ACLR
irst_n => cont[3].ACLR
irst_n => cont[4].ACLR
irst_n => mstart.ACLR
irst_n => prestart.ACLR
irst_n => lcd_en~reg0.ACLR
irst_n => odone~reg0.ACLR
irst_n => state~7.DATAIN
lcd_data[0] <= idata[0].DB_MAX_OUTPUT_PORT_TYPE
lcd_data[1] <= idata[1].DB_MAX_OUTPUT_PORT_TYPE
lcd_data[2] <= idata[2].DB_MAX_OUTPUT_PORT_TYPE
lcd_data[3] <= idata[3].DB_MAX_OUTPUT_PORT_TYPE
lcd_data[4] <= idata[4].DB_MAX_OUTPUT_PORT_TYPE
lcd_data[5] <= idata[5].DB_MAX_OUTPUT_PORT_TYPE
lcd_data[6] <= idata[6].DB_MAX_OUTPUT_PORT_TYPE
lcd_data[7] <= idata[7].DB_MAX_OUTPUT_PORT_TYPE
lcd_rw <= <GND>
lcd_en <= lcd_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_rs <= irs.DB_MAX_OUTPUT_PORT_TYPE


